{
  "customers": [
    {
      "id": "cus_1scetm",
      "name": "Cyburity",
      "policyIds": [],
      "policyRev": 11
    }
  ],
  "devices": [
    {
      "id": "dev_9a2ek2",
      "hostname": "CYB-L00002643",
      "distro": "ubuntu-24.04",
      "agentVersion": "0.1.0",
      "customerId": "cus_1scetm",
      "policyIds": [],
      "lastSeen": "2025-10-13T20:53:38.867Z",
      "policyRev": 11
    },
    {
      "id": "1",
      "hostname": "unknown",
      "distro": "linux-unknown",
      "agentVersion": "0.2.0",
      "lastSeen": "2025-10-13T21:34:28.743Z",
      "policyIds": [],
      "policyRev": 0
    }
  ],
  "policies": [
    {
      "id": "pol-cmmc",
      "name": "CMMC",
      "description": "",
      "args": {
        "state": "present"
      },
      "bash": "#!/bin/bash\n# ──────────────────────────────────────────────────────────────────────────────\n# Linux AD Auto Domain Joiner — CMMC Workstation Baseline (Ubuntu) — QUIET RUN\n# Variant: no console output, no prompts, NO domain join, NO SSSD hardening\n# Target: Ubuntu 22.04 / 24.04 LTS\n# ──────────────────────────────────────────────────────────────────────────────\n\nset -euo pipefail\nIFS=$'\\n\\t'\n\n# Require bash + root, but stay silent if not met\n[ -n \"${BASH_VERSION:-}\" ] || exit 1\n[ \"$EUID\" -eq 0 ] || exit 1\nexport DEBIAN_FRONTEND=noninteractive\n\n# Silence all output\nexec >/dev/null 2>&1\n\n# Evidence logger (file only, never prints)\nmkdir -p /var/log/cmmc-evidence /etc/rsyslog.d\nevid() { echo \"$(date -Is) $*\" >> /var/log/cmmc-evidence/actions.log; }\n\n# Package helpers\nneed_pkg() { dpkg -s \"$1\" >/dev/null 2>&1 || apt-get install -yq \"$1\"; }\nneed_pkgs() { for p in \"$@\"; do need_pkg \"$p\"; done; }\n\n# Safe crontab append/replace\ncrontab_ensure() {\n  local pattern=\"$1\" line=\"$2\"\n  { crontab -l 2>/dev/null || true; } | grep -vF -- \"$pattern\" | { cat; echo \"$line\"; } | crontab -\n}\n\n# Rollback if anything fails (quietly open access)\nrollback_open_access() {\n  command -v realm >/dev/null 2>&1 && realm permit --all 2>/dev/null || true\n  sed -i '/^AllowGroups/d' /etc/ssh/sshd_config 2>/dev/null || true\n  systemctl reload ssh 2>/dev/null || true\n}\ntrap 'rollback_open_access' ERR\n\n. /etc/os-release || true\n\n# ── [1] LUKS detection → evidence only\nif lsblk -o TYPE | grep -qw crypt; then\n  evid \"LUKS detected\"\nelse\n  evid \"No LUKS\"\nfi\n\n# ── [2] Baseline packages (kept broad; harmless if already present)\necho \"postfix postfix/mailname string $(hostname -f || hostname)\" | debconf-set-selections\necho \"postfix postfix/main_mailer_type string 'Local only'\"       | debconf-set-selections\n\napt-get update -yq || true\napt-get install -yq \\\n  realmd sssd sssd-tools adcli samba-common-bin krb5-user packagekit \\\n  libnss-sss libpam-sss oddjob oddjob-mkhomedir \\\n  auditd audispd-plugins aide lynis \\\n  clamav clamav-daemon clamav-freshclam \\\n  ufw fail2ban logwatch mailutils \\\n  libpam-pwquality rsyslog apparmor-utils \\\n  fips-initramfs debsums dconf-cli unattended-upgrades update-notifier-common || true\nevid \"Baseline packages ensured\"\n\n# ---- Break-glass local admin\nensure_break_glass() {\n  local u=\"breakglass\" pw\n  if ! id \"$u\" >/dev/null 2>&1; then\n    pw=\"$(openssl rand -base64 24)\"\n    useradd -m -s /bin/bash \"$u\"\n    echo \"$u:$pw\" | chpasswd\n    usermod -aG sudo \"$u\"\n    umask 077\n    echo \"$pw\" > /root/.breakglass_pw\n    chmod 600 /root/.breakglass_pw\n  fi\n  mkdir -p /etc/sudoers.d\n  cat >/etc/sudoers.d/00-break-glass <<'EOF'\n# Break-glass local sudo (adjust NOPASSWD as desired)\n%sudo ALL=(ALL) :ALL\nEOF\n  chmod 440 /etc/sudoers.d/00-break-glass\n  evid \"Break-glass local admin ensured\"\n}\nensure_break_glass\n\n# ── [3] FIPS awareness (evidence only)\nif [[ -r /proc/sys/crypto/fips_enabled && \"$(cat /proc/sys/crypto/fips_enabled)\" = \"1\" ]]; then\n  evid \"FIPS enabled\"\nelse\n  evid \"FIPS not enabled\"\nfi\n\n# ── [4] AppArmor\naa-enforce /etc/apparmor.d/* >/dev/null 2>&1 || true\nevid \"AppArmor enforcement attempted\"\n\n# ── [5] SUID/SGID inventory\nfind / -xdev -type f \\( -perm -4000 -o -perm -2000 \\) > /var/log/cmmc-evidence/suid_sgid_files.txt 2>/dev/null || true\nevid \"Generated SUID/SGID inventory\"\n\n# ── [6] Asset/software/users\nASSET_INV=\"/var/log/cmmc_asset_inventory.txt\"\n{\n  echo \"==== Installed Packages ====\"; dpkg -l\n  echo; echo \"==== Enabled Services ====\"; systemctl list-unit-files | awk '$2==\"enabled\"{print $1}'\n  echo; echo \"==== Local Users (uid>=1000) ====\"; awk -F: '$3>=1000{print $1}' /etc/passwd\n} > \"$ASSET_INV\"\nevid \"Wrote asset inventory $ASSET_INV\"\n\n# ── [7] Lynis baseline (quiet)\nlynis audit system --quick > /var/log/lynis_baseline.log || true\nevid \"Lynis quick audit run\"\n\n# ── [8] Journald → rsyslog (no SIEM prompt; skip forwarder)\nsed -i 's/^#\\?ForwardToSyslog=.*/ForwardToSyslog=yes/' /etc/systemd/journald.conf || true\nsystemctl restart systemd-journald || true\nevid \"Journald forwarding to rsyslog enabled (no SIEM forward)\"\n\n# ── [9] NSS/PAM: locals-first + mkhomedir (pre-SSSD; safe even without SSSD)\nsed -i 's/^passwd:.*/passwd:         files systemd sss/' /etc/nsswitch.conf || true\nsed -i 's/^group:.*/group:          files systemd sss/' /etc/nsswitch.conf || true\nsed -i 's/^netgroup:.*/netgroup:       files sss/' /etc/nsswitch.conf || true\ngrep -q 'pam_localuser.so' /etc/pam.d/common-auth || \\\n  sed -i '1i auth    sufficient   pam_localuser.so' /etc/pam.d/common-auth\nfor PAMF in /etc/pam.d/common-session /etc/pam.d/common-session-noninteractive; do\n  grep -q 'pam_mkhomedir.so' \"$PAMF\" || echo 'session required pam_mkhomedir.so skel=/etc/skel/ umask=0077' >> \"$PAMF\"\ndone\nevid \"NSS/PAM locals-first + mkhomedir set\"\n\n# ── [10] *** Domain join + SSSD config: REMOVED ***\n\n# ── [11] SSH hardening\nSSHD=\"/etc/ssh/sshd_config\"\nensure_kv() { local k=\"$1\" v=\"$2\"; grep -qE \"^${k}\\b\" \"$SSHD\" && sed -i \"s@^${k}.*@${k} ${v}@\" \"$SSHD\" || echo \"${k} ${v}\" >> \"$SSHD\"; }\nensure_kv PermitRootLogin no\nensure_kv PermitEmptyPasswords no\nensure_kv PasswordAuthentication yes\nensure_kv ClientAliveInterval 600\nensure_kv ClientAliveCountMax 0\nensure_kv LogLevel VERBOSE\nensure_kv Ciphers \"aes256-ctr,aes192-ctr,aes128-ctr\"\nensure_kv MACs \"hmac-sha2-512,hmac-sha2-256\"\nensure_kv KexAlgorithms \"diffie-hellman-group14-sha256,diffie-hellman-group-exchange-sha256\"\ngrep -q '^Banner ' \"$SSHD\" || echo \"Banner /etc/issue.net\" >> \"$SSHD\"\nsystemctl reload ssh || systemctl restart ssh || true\nevid \"SSH hardened\"\n\n# ── [12] Auditd rules + config\nneed_pkgs auditd audispd-plugins\nmkdir -p /etc/audit/rules.d\ncat >/etc/audit/rules.d/30-cmmc.rules <<'AUDITRULES'\n-w /etc/sudoers -p wa -k scope\n-w /etc/sudoers.d/ -p wa -k scope\n-w /etc/passwd -p wa -k identity\n-w /etc/shadow -p wa -k identity\n-w /etc/group  -p wa -k identity\n-w /var/log/auth.log -p wa -k logins\n-w /etc/ssh/sshd_config -p wa -k ssh\n-a always,exit -F arch=b64 -S execve -k exec\n-a always,exit -F arch=b32 -S execve -k exec\nAUDITRULES\nif [[ -f /etc/audit/auditd.conf ]]; then\n  sed -i 's/^max_log_file.*/max_log_file = 50/' /etc/audit/auditd.conf || true\n  sed -i 's/^max_log_file_action.*/max_log_file_action = rotate/' /etc/audit/auditd.conf || true\n  sed -i 's/^space_left_action.*/space_left_action = email/' /etc/audit/auditd.conf || true\n  sed -i 's/^action_mail_acct.*/action_mail_acct = root/' /etc/audit/auditd.conf || true\nfi\nsystemctl enable --now auditd || true\ncommand -v augenrules >/dev/null 2>&1 && augenrules --load || true\nsystemctl restart auditd || true\nevid \"Auditd configured\"\n\n# ── [13] Audit drift cron\ncat >/usr/local/sbin/auditd_rule_check.sh <<'EOF'\n#!/bin/bash\nset -euo pipefail\ncommand -v augenrules >/dev/null 2>&1 || exit 0\n[[ -f /etc/audit/rules.d/30-cmmc.rules ]] || exit 0\nTMP=\"$(mktemp)\"; trap 'rm -f \"$TMP\"' EXIT\naugenrules --check | sort > \"$TMP\" || true\nif ! diff -q \"$TMP\" /etc/audit/rules.d/30-cmmc.rules >/dev/null 2>&1; then\n  echo \"[!] AUDITD RULES DRIFT DETECTED on $(hostname) $(date -Is)\" | mail -s \"Auditd Rules Drift\" root\nfi\nEOF\nchmod +x /usr/local/sbin/auditd_rule_check.sh\ncrontab_ensure \"auditd_rule_check.sh\" \"0 3 * * 1 /usr/local/sbin/auditd_rule_check.sh\"\nevid \"Audit drift cron set\"\n\n# ── [14] Logs perms + journald persistence\nchown root:root /var/log /var/log/audit 2>/dev/null || true\nchmod 0755 /var/log 2>/dev/null || true\nchmod 0750 /var/log/audit 2>/dev/null || true\nmkdir -p /var/log/journal\nsed -i 's/^\\s*#\\?\\s*Storage=.*/Storage=persistent/' /etc/systemd/journald.conf\nsed -i 's/^\\s*#\\?\\s*SystemMaxUse=.*/SystemMaxUse=500M/' /etc/systemd/journald.conf\nsed -i 's/^\\s*#\\?\\s*RuntimeMaxUse=.*/RuntimeMaxUse=200M/' /etc/systemd/journald.conf\nsystemctl restart systemd-journald || true\nevid \"Log perms + persistent journald set\"\n\n# ── [15] Session timeout\nfor F in /etc/profile /etc/bash.bashrc; do\n  grep -q '^TMOUT=' \"$F\" || { echo 'TMOUT=600'; echo 'readonly TMOUT'; } | tee -a \"$F\" >/dev/null\ndone\nevid \"Session timeout enabled\"\n\n# ── [16] GDM login-screen banner + hide user list\nmkdir -p /etc/dconf/db/gdm.d /etc/dconf/db/gdm.d/locks /etc/dconf/profile\ncat >/etc/dconf/profile/gdm <<'EOF'\nuser-db:user\nsystem-db:gdm\nEOF\ncat >/etc/dconf/db/gdm.d/00-login-banner <<'EOF'\n[org/gnome/login-screen]\nbanner-message-enable=true\nbanner-message-text='UNAUTHORIZED ACCESS PROHIBITED.\nUse of this system constitutes consent to monitoring.\nEvidence of illegal activity may be provided to law enforcement.'\ndisable-user-list=true\nEOF\ncat >/etc/dconf/db/gdm.d/locks/login-screen.lock <<'EOF'\n/org/gnome/login-screen/banner-message-enable\n/org/gnome/login-screen/banner-message-text\n/org/gnome/login-screen/disable-user-list\nEOF\ncommand -v dconf >/dev/null 2>&1 && dconf update || true\nsystemctl try-restart gdm3 2>/dev/null || true\nevid \"GDM login banner applied\"\n\n# ── [17] Unattended upgrades + GPG enforcement\ndpkg-reconfigure -fnoninteractive unattended-upgrades || true\ncat >/etc/apt/apt.conf.d/51-cmmc-auto-upgrades <<'EOF'\nAPT::Periodic::Update-Package-Lists \"1\";\nAPT::Periodic::Unattended-Upgrade \"1\";\nUnattended-Upgrade::Automatic-Reboot \"true\";\nUnattended-Upgrade::Automatic-Reboot-Time \"03:30\";\nEOF\necho 'Acquire::AllowUnauthenticated \"false\";' >/etc/apt/apt.conf.d/99unauth\nevid \"Unattended upgrades configured\"\n\n# ── [18] cron/at allowlists\necho \"root\" | tee /etc/cron.allow /etc/at.allow >/dev/null\nchmod 600 /etc/cron.allow /etc/at.allow\nevid \"cron/at restricted to root\"\n\n# ── [19] USB storage policy scaffold (no blanket block by default)\nmkdir -p /etc/udev/rules.d\ncat >/etc/udev/rules.d/99-allowed-usb.rules <<'EOF'\n# Example allowlisting (disabled by default)\n# SUBSYSTEM==\"usb\", ATTR{serial}!=\"COMPANYUSB123456\", ATTR{authorized}=\"0\"\nEOF\nevid \"USB allowlist scaffold installed\"\n\n# ── [20] /tmp hardening\nif mountpoint -q /tmp; then\n  mount -o remount,noexec,nosuid,nodev /tmp || true\nelse\n  grep -qE '^\\s*tmpfs\\s+/tmp' /etc/fstab || echo \"tmpfs /tmp tmpfs defaults,noexec,nosuid,nodev 0 0\" >> /etc/fstab\nfi\nevid \"/tmp hardened\"\n\n# ── [21] UFW default deny + desktop allowances\nufw --force reset >/dev/null 2>&1 || true\nufw default deny incoming\nufw default allow outgoing\nufw allow OpenSSH\nufw allow 5353/udp\nufw allow 631/tcp\necho y | ufw enable >/dev/null\nevid \"UFW enabled with desktop allowances\"\n\n# ── [22] Time sync\ntimedatectl set-ntp true || true\nevid \"NTP enabled\"\n\n# ── [23] ClamAV\nneed_pkgs clamav clamav-daemon clamav-freshclam\nsystemctl enable --now clamav-freshclam 2>/dev/null || true\nsystemctl enable --now clamav-daemon 2>/dev/null || true\nevid \"ClamAV enabled\"\n\n# ── [24] AIDE init + weekly\nneed_pkgs aide\ncommand -v aideinit >/dev/null 2>&1 && aideinit || true\n[[ -f /var/lib/aide/aide.db.new ]] && mv /var/lib/aide/aide.db.new /var/lib/aide/aide.db || true\ncrontab_ensure \"aide --check\" \"0 3 * * 0 /usr/bin/aide --check | mail -s 'AIDE Weekly Check' root\"\nevid \"AIDE initialized + weekly cron\"\n\n# ── [25] Home perms + umask\nchmod 700 /home/* 2>/dev/null || true\nfor F in /etc/profile /etc/bash.bashrc; do\n  grep -q '^umask 077' \"$F\" || echo 'umask 077' >> \"$F\"\ndone\nevid \"Home perms + umask set\"\n\n# ── [26] Logwatch + Fail2ban\nneed_pkgs logwatch fail2ban\n[[ -f /usr/share/logwatch/default.conf/logwatch.conf ]] && \\\n  echo \"MailTo = root\" >> /usr/share/logwatch/default.conf/logwatch.conf\ncrontab_ensure \"logwatch --output mail\" \"0 6 * * * /usr/sbin/logwatch --output mail --mailto root --detail high\"\nmkdir -p /etc/fail2ban/jail.d\ncat >/etc/fail2ban/jail.d/sshd-cmmc.local <<'EOF'\n[sshd]\nenabled = true\nmode = aggressive\nmaxretry = 5\nfindtime = 600\nbantime = 3600\nEOF\nsystemctl enable --now fail2ban 2>/dev/null || true\nevid \"Logwatch cron + Fail2ban SSH jail enabled\"\n\n# ── [27] Password policy / lockouts (complexity only; lockouts not enforced)\nPWQ=/etc/security/pwquality.conf\nsed -i 's/^#\\?minlen.*/minlen = 12/' \"$PWQ\"\nsed -i 's/^#\\?dcredit.*/dcredit = -1/' \"$PWQ\"\nsed -i 's/^#\\?ucredit.*/ucredit = -1/' \"$PWQ\"\nsed -i 's/^#\\?lcredit.*/lcredit = -1/' \"$PWQ\"\nsed -i 's/^#\\?ocredit.*/ocredit = -1/' \"$PWQ\"\n# Password aging\nchage --maxdays 90 --mindays 7 --warndays 14 root || true\nfor u in $(awk -F: '$3>=1000{print $1}' /etc/passwd); do\n  chage --maxdays 90 --mindays 7 --warndays 14 \"$u\" || true\ndone\n# (No pam_faillock here to avoid accidental lockouts)\nevid \"Password complexity + aging set; no lockouts\"\n\n# ── [28] Weekly ClamAV scan\ncrontab_ensure \"clamscan -r /\" \"0 4 * * 0 /usr/bin/clamscan -r / | mail -s 'ClamAV Weekly Scan' root\"\nevid \"Weekly clamscan cron set\"\n\n# ── [29] Kernel/sysctl hardening\ncat >/etc/sysctl.d/99-cmmc.conf <<'EOF'\n# Routing/forwarding\nnet.ipv4.ip_forward = 0\nnet.ipv6.conf.all.forwarding = 0\n# Source routing\nnet.ipv4.conf.all.accept_source_route = 0\nnet.ipv6.conf.all.accept_source_route = 0\n# Redirects\nnet.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.all.secure_redirects = 0\nnet.ipv6.conf.all.accept_redirects = 0\n# ASLR + suid core dumps\nkernel.randomize_va_space = 2\nfs.suid_dumpable = 0\n# Kernel info restrictions\nkernel.dmesg_restrict = 1\nkernel.kptr_restrict = 2\nEOF\nsysctl --system || true\nevid \"Sysctl hardening applied\"\n\n# ── [30] GRUB menu forced (10s) — recovery convenience\nif [[ -f /etc/default/grub ]]; then\n  cp -a /etc/default/grub{,.bak-cmmc}\n  grep -q '^GRUB_TIMEOUT_STYLE=' /etc/default/grub && \\\n    sed -i 's/^GRUB_TIMEOUT_STYLE=.*/GRUB_TIMEOUT_STYLE=menu/' /etc/default/grub || \\\n    echo 'GRUB_TIMEOUT_STYLE=menu' >> /etc/default/grub\n  grep -q '^GRUB_TIMEOUT=' /etc/default/grub && \\\n    sed -i 's/^GRUB_TIMEOUT=.*/GRUB_TIMEOUT=10/' /etc/default/grub || \\\n    echo 'GRUB_TIMEOUT=10' >> /etc/default/grub\n  update-grub || true\n  evid \"GRUB menu forced (10s)\"\nfi\n\n# ── [31] Service minimization (disable legacy)\nTO_DISABLE=$(systemctl list-unit-files --state=enabled \\\n  | awk '{print $1}' \\\n  | grep -E '^(telnet|tftp|rsh|rexec|rlogin|rpcbind|vsftpd|xinetd)\\.service$' || true)\nif [[ -n \"$TO_DISABLE\" ]]; then\n  echo \"$TO_DISABLE\" | xargs -r systemctl disable --now || true\n  evid \"Disabled legacy services\"\nelse\n  evid \"No legacy services to disable\"\nfi\n\n# ── [32] Workstation GNOME dconf locks\nmkdir -p /etc/dconf/db/local.d /etc/dconf/db/local.d/locks /etc/dconf/profile\ncat >/etc/dconf/profile/user <<'EOF'\nuser-db:user\nsystem-db:local\nEOF\ncat >/etc/dconf/db/local.d/00-cmmc-locks <<'EOF'\n[org/gnome/desktop/session]\nidle-delay=uint32 900\n[org/gnome/desktop/screensaver]\nlock-enabled=true\nlock-delay=uint32 0\n[org/gnome/settings-daemon/plugins/power]\nsleep-inactive-ac-type='suspend'\nsleep-inactive-ac-timeout=1800\nsleep-inactive-battery-type='suspend'\nsleep-inactive-battery-timeout=1200\n[org/gnome/desktop/media-handling]\nautomount=false\nautomount-open=false\nautorun-never=true\nEOF\ncat >/etc/dconf/db/local.d/locks/cmmc.lock <<'EOF'\n/org/gnome/desktop/session/idle-delay\n/org/gnome/desktop/screensaver/lock-enabled\n/org/gnome/desktop/screensaver/lock-delay\n/org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-type\n/org/gnome/settings-daemon/plugins/power/sleep-inactive-ac-timeout\n/org/gnome/settings-daemon/plugins/power/sleep-inactive-battery-type\n/org/gnome/settings-daemon/plugins/power/sleep-inactive-battery-timeout\n/org/gnome/desktop/media-handling/automount\n/org/gnome/desktop/media-handling/automount-open\n/org/gnome/desktop/media-handling/autorun-never\nEOF\ncommand -v dconf >/dev/null 2>&1 && dconf update || true\nevid \"GNOME dconf workstation locks applied\"\n\n# ── [33] Browser policy stubs\nmkdir -p /etc/firefox/policies\ncat >/etc/firefox/policies/policies.json <<'EOF'\n{\n  \"policies\": {\n    \"DisableTelemetry\": true,\n    \"DisableFirefoxStudies\": true,\n    \"DisablePocket\": true,\n    \"BlockAboutConfig\": false,\n    \"PasswordManagerEnabled\": true,\n    \"ExtensionSettings\": { \"*\": { \"installation_mode\": \"allowed\" } }\n  }\n}\nEOF\nfor base in /etc/opt/chrome /etc/chromium; do\n  mkdir -p \"${base}/policies/managed\"\n  cat >\"${base}/policies/managed/cmmc.json\" <<'EOF'\n{\n  \"PasswordManagerEnabled\": true,\n  \"MetricsReportingEnabled\": false,\n  \"SafeBrowsingEnabled\": true,\n  \"SpellcheckUseSpellingService\": false,\n  \"DefaultPopupsSetting\": 2\n}\nEOF\ndone\nevid \"Browser policy stubs installed\"\n\n# ── [34] Procedure/Evidence scaffolding\nmkdir -p /etc/cmmc\ntouch /etc/cmmc/{training.md,incident_response_plan.md,media_destruction_procedure.md}\ncrontab_ensure \"cmmc_userdump_\" '0 0 1 * * getent passwd > /var/log/cmmc_userdump_$(date +\\%F).log'\nevid \"Procedure stubs + monthly account dump scheduled\"\n\n# End (quiet)\nexit 0",
      "version": 1
    }
  ],
  "agentMap": {
    "1": "1"
  },
  "seq": {
    "device": 2,
    "agent": 2
  },
  "tokens": {
    "enr_mgphvnqb_8aff58j7": {
      "token": "enr_mgphvnqb_8aff58j7",
      "customerId": "cus_1scetm",
      "os": "ubuntu-22.04",
      "used": false,
      "createdAt": 1760381812451
    },
    "enr_mgpjhjqr_s2qw7s7a": {
      "token": "enr_mgpjhjqr_s2qw7s7a",
      "customerId": "cus_1scetm",
      "os": "ubuntu-22.04",
      "used": false,
      "createdAt": 1760384513331
    }
  },
  "lastResults": {
    "1": {
      "at": "2025-10-13T20:30:01.108Z",
      "rev": null,
      "results": []
    }
  }
}